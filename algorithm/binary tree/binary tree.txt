二叉树是有限个数据元素的集合，该集合或者为空、或者由一个称为根的元素及两个不相交的、被分别称为根的左子树和根的右子树的二叉树组成。

二叉树是有序的。


主要性质：
  一棵非空的二叉树的第 i 层上最多有 2^(i - 1) 个结点（i>=1）
  一棵深度为 k 的二叉树中，最多具有 2^k - 1 个结点
  一棵非空的二叉树，若叶子结点数为 n0,度数为 2 的结点数为 n2, 则有：n0 = n2 + 1
  具有 n 个结点的完全二叉树的深入 k 为 [log2n] + 1。注:向下取整
  
  对于具有 n 个结点的完全二叉树，如果按照从上到下和从左到右的顺序对二叉树中的所有结点从 1 开始顺序编号，则对于任意的编号为 i 的结点有：
    1）如果 i>1, 则编号为 i 的结点的双亲结点的编号为 [i/2](向下取整); 如果 i=1, 则序号为 1 的结点是根结点，无双亲结点。
    2）如果 2i<=n, 则编号为 i 的结点的左孩子结点的编号为 2i; 如果 2i>n, 则序号为 i 的结点无左孩子。
    3）如果 2i + 1 <= n, 则编号为 i 的结点的右孩子结点的编号为 2i+1; 如果 2i+1>n, 则序号为 i 的结点无右孩子。


顺序存储：
用一组连续的存储单元存放二叉树中的结点。一般是按照二叉树结点从上到下、从左到右的顺序存储。
这种存储方式对完全二叉树和满二叉树比较合适。可以利用存储位置确定结点在二叉树中的位置及结点之间的关系。
对于非完全二叉树，这种存储方式会造成存储空间的浪费，特别是只有左子树或者只有右子树的特殊情况下。


链式存储：
二叉链表存储：每个结点由三个域组成，数据域和两个指向左孩子和右孩子的指针域。这种存储方法能够方便的找到其左右孩子，但是不能直接找到其双亲结点。用三叉链表存储可以解决这一问题。
三叉链表存储：每个结点增加一个指向双亲结点的指针域。